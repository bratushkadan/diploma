// Package oapi_codegen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package oapi_codegen

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/http"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	"github.com/gin-gonic/gin"
	"github.com/oapi-codegen/runtime"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for OrdersProcessYoomoneyPaymentReqCurrency.
const (
	N643 OrdersProcessYoomoneyPaymentReqCurrency = 643
)

// Defines values for OrdersProcessYoomoneyPaymentReqNotificationType.
const (
	CardIncoming OrdersProcessYoomoneyPaymentReqNotificationType = "card-incoming"
	P2pIncoming  OrdersProcessYoomoneyPaymentReqNotificationType = "p2p-incoming"
)

// AuthenticateReq defines model for AuthenticateReq.
type AuthenticateReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// AuthenticateRes defines model for AuthenticateRes.
type AuthenticateRes struct {
	ExpiresAt    string `json:"expires_at"`
	RefreshToken string `json:"refresh_token"`
}

// CartClearCartRes defines model for CartClearCartRes.
type CartClearCartRes = map[string]interface{}

// CartClearCartResPosition defines model for CartClearCartResPosition.
type CartClearCartResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CartDeleteCartPositionRes defines model for CartDeleteCartPositionRes.
type CartDeleteCartPositionRes struct {
	DeletedPosition CartDeleteCartPositionResPosition `json:"deleted_position"`
}

// CartDeleteCartPositionResPosition defines model for CartDeleteCartPositionResPosition.
type CartDeleteCartPositionResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CartGetCartPositionsRes defines model for CartGetCartPositionsRes.
type CartGetCartPositionsRes struct {
	Positions []CartGetCartPositionsResPosition `json:"positions"`
}

// CartGetCartPositionsResPosition defines model for CartGetCartPositionsResPosition.
type CartGetCartPositionsResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CartSetCartPositionRes defines model for CartSetCartPositionRes.
type CartSetCartPositionRes struct {
	SetPosition CartSetCartPositionResPosition `json:"set_position"`
}

// CartSetCartPositionResPosition defines model for CartSetCartPositionResPosition.
type CartSetCartPositionResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CatalogGetRes defines model for CatalogGetRes.
type CatalogGetRes struct {
	NextPageToken *string                `json:"next_page_token"`
	Products      []CatalogGetResProduct `json:"products"`
}

// CatalogGetResProduct defines model for CatalogGetResProduct.
type CatalogGetResProduct struct {
	Id   string `json:"id"`
	Name string `json:"name"`

	// Picture url
	Picture *string `json:"picture"`
	Price   float64 `json:"price"`
}

// CreateAccessTokenReq defines model for CreateAccessTokenReq.
type CreateAccessTokenReq struct {
	RefreshToken string `json:"refresh_token"`
}

// CreateAccessTokenRes defines model for CreateAccessTokenRes.
type CreateAccessTokenRes struct {
	AccessToken string `json:"access_token"`
	ExpiresAt   string `json:"expires_at"`
}

// CreateProductReq defines model for CreateProductReq.
type CreateProductReq struct {
	Description string                 `json:"description"`
	Metadata    map[string]interface{} `json:"metadata"`
	Name        string                 `json:"name"`
	Price       float64                `json:"price"`
	Stock       int                    `json:"stock"`
}

// CreateProductRes defines model for CreateProductRes.
type CreateProductRes struct {
	CreatedAt   string                 `json:"created_at"`
	Description string                 `json:"description"`
	Id          string                 `json:"id"`
	Metadata    map[string]interface{} `json:"metadata"`
	Name        string                 `json:"name"`
	Pictures    GetProductResPictures  `json:"pictures"`
	Price       float64                `json:"price"`
	SellerId    string                 `json:"seller_id"`
	Stock       int                    `json:"stock"`
	UpdatedAt   string                 `json:"updated_at"`
}

// CreateSellerAccountReq defines model for CreateSellerAccountReq.
type CreateSellerAccountReq struct {
	AccessToken string `json:"access_token"`
	Seller      struct {
		Email    string `json:"email"`
		Name     string `json:"name"`
		Password string `json:"password"`
	} `json:"seller"`
}

// CreateSellerAccountRes defines model for CreateSellerAccountRes.
type CreateSellerAccountRes struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateUserAccountReq defines model for CreateUserAccountReq.
type CreateUserAccountReq struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
}

// CreateUserAccountRes defines model for CreateUserAccountRes.
type CreateUserAccountRes struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// DeleteProductPictureRes defines model for DeleteProductPictureRes.
type DeleteProductPictureRes struct {
	Id string `json:"id"`
}

// DeleteProductRes defines model for DeleteProductRes.
type DeleteProductRes struct {
	Id string `json:"id"`
}

// Err defines model for Err.
type Err struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetProductRes defines model for GetProductRes.
type GetProductRes struct {
	CreatedAt   string                 `json:"created_at"`
	Description string                 `json:"description"`
	Id          string                 `json:"id"`
	Metadata    map[string]interface{} `json:"metadata"`
	Name        string                 `json:"name"`
	Pictures    GetProductResPictures  `json:"pictures"`
	Price       float64                `json:"price"`
	SellerId    string                 `json:"seller_id"`
	Stock       int                    `json:"stock"`
	UpdatedAt   string                 `json:"updated_at"`
}

// GetProductResPicture defines model for GetProductResPicture.
type GetProductResPicture struct {
	Id  string `json:"id"`
	Url string `json:"url"`
}

// GetProductResPictures defines model for GetProductResPictures.
type GetProductResPictures = []GetProductResPicture

// ListProductsRes defines model for ListProductsRes.
type ListProductsRes struct {
	NextPageToken *string                  `json:"next_page_token"`
	Products      []ListProductsResProduct `json:"products"`
}

// ListProductsResProduct defines model for ListProductsResProduct.
type ListProductsResProduct struct {
	Id         string  `json:"id"`
	Name       string  `json:"name"`
	PictureUrl string  `json:"picture_url"`
	Price      float64 `json:"price"`
	SellerId   string  `json:"seller_id"`
}

// OrdersCreateOrderRes defines model for OrdersCreateOrderRes.
type OrdersCreateOrderRes struct {
	Operation OrdersCreateOrderResOperation `json:"operation"`
}

// OrdersCreateOrderResOperation defines model for OrdersCreateOrderResOperation.
type OrdersCreateOrderResOperation struct {
	CreatedAt string  `json:"created_at"`
	Id        string  `json:"id"`
	OrderId   *string `json:"order_id,omitempty"`
	Status    string  `json:"status"`
	Type      string  `json:"type"`
	UpdatedAt string  `json:"updated_at"`
	UserId    string  `json:"user_id"`
}

// OrdersGetOperationRes defines model for OrdersGetOperationRes.
type OrdersGetOperationRes struct {
	CreatedAt string  `json:"created_at"`
	Details   *string `json:"details,omitempty"`
	Id        string  `json:"id"`
	OrderId   *string `json:"order_id,omitempty"`
	Status    string  `json:"status"`
	Type      string  `json:"type"`
	UpdatedAt string  `json:"updated_at"`
	UserId    string  `json:"user_id"`
}

// OrdersGetOrderRes defines model for OrdersGetOrderRes.
type OrdersGetOrderRes struct {
	CreatedAt string                  `json:"created_at"`
	Id        string                  `json:"id"`
	Items     []OrdersGetOrderResItem `json:"items"`
	Status    string                  `json:"status"`
	UpdatedAt string                  `json:"updated_at"`
	UserId    string                  `json:"user_id"`
}

// OrdersGetOrderResItem defines model for OrdersGetOrderResItem.
type OrdersGetOrderResItem struct {
	Count      int     `json:"count"`
	Name       string  `json:"name"`
	PictureUrl *string `json:"picture_url,omitempty"`
	Price      float64 `json:"price"`
	ProductId  string  `json:"product_id"`
	SellerId   string  `json:"seller_id"`
}

// OrdersListOrdersRes defines model for OrdersListOrdersRes.
type OrdersListOrdersRes struct {
	NextPageToken *string                    `json:"next_page_token"`
	Orders        []OrdersListOrdersResOrder `json:"orders"`
}

// OrdersListOrdersResItem defines model for OrdersListOrdersResItem.
type OrdersListOrdersResItem struct {
	Count      int     `json:"count"`
	Name       string  `json:"name"`
	PictureUrl *string `json:"picture_url,omitempty"`
	Price      float64 `json:"price"`
	ProductId  string  `json:"product_id"`
	SellerId   string  `json:"seller_id"`
}

// OrdersListOrdersResOrder defines model for OrdersListOrdersResOrder.
type OrdersListOrdersResOrder struct {
	CreatedAt *string                   `json:"created_at,omitempty"`
	Id        string                    `json:"id"`
	Items     []OrdersListOrdersResItem `json:"items"`
	Status    string                    `json:"status"`
	UpdatedAt *string                   `json:"updated_at,omitempty"`
	UserId    string                    `json:"user_id"`
}

// OrdersProcessYoomoneyPaymentReq defines model for OrdersProcessYoomoneyPaymentReq.
type OrdersProcessYoomoneyPaymentReq struct {
	Amount           float64                                         `json:"amount"`
	Currency         OrdersProcessYoomoneyPaymentReqCurrency         `json:"currency"`
	Datetime         time.Time                                       `json:"datetime"`
	Label            *string                                         `json:"label"`
	NotificationType OrdersProcessYoomoneyPaymentReqNotificationType `json:"notification_type"`
	OperationId      string                                          `json:"operation_id"`

	// Sha1Hash sha1 hash that is used to check the integrity of payment processing request
	Sha1Hash []string `json:"sha1_hash"`
}

// OrdersProcessYoomoneyPaymentReqCurrency defines model for OrdersProcessYoomoneyPaymentReq.Currency.
type OrdersProcessYoomoneyPaymentReqCurrency float32

// OrdersProcessYoomoneyPaymentReqNotificationType defines model for OrdersProcessYoomoneyPaymentReq.NotificationType.
type OrdersProcessYoomoneyPaymentReqNotificationType string

// OrdersProcessYoomoneyPaymentRes defines model for OrdersProcessYoomoneyPaymentRes.
type OrdersProcessYoomoneyPaymentRes = map[string]interface{}

// OrdersUpdateOrderReq defines model for OrdersUpdateOrderReq.
type OrdersUpdateOrderReq struct {
	Status string `json:"status"`
}

// OrdersUpdateOrderRes defines model for OrdersUpdateOrderRes.
type OrdersUpdateOrderRes struct {
	Status    string `json:"status"`
	UpdatedAt string `json:"updated_at"`
}

// PrivateClearCartPositionsReq defines model for PrivateClearCartPositionsReq.
type PrivateClearCartPositionsReq struct {
	Messages []PrivateClearCartPositionsReqMessage `json:"messages"`
}

// PrivateClearCartPositionsReqMessage defines model for PrivateClearCartPositionsReqMessage.
type PrivateClearCartPositionsReqMessage struct {
	UserId string `json:"user_id"`
}

// PrivateClearCartPositionsRes defines model for PrivateClearCartPositionsRes.
type PrivateClearCartPositionsRes = map[string]interface{}

// PrivateOrderBatchCancelUnpaidOrdersReq defines model for PrivateOrderBatchCancelUnpaidOrdersReq.
type PrivateOrderBatchCancelUnpaidOrdersReq = map[string]interface{}

// PrivateOrderBatchCancelUnpaidOrdersRes defines model for PrivateOrderBatchCancelUnpaidOrdersRes.
type PrivateOrderBatchCancelUnpaidOrdersRes = map[string]interface{}

// PrivateOrderCancelOperationsReq defines model for PrivateOrderCancelOperationsReq.
type PrivateOrderCancelOperationsReq struct {
	Messages []PrivateOrderCancelOperationsReqMessage `json:"messages"`
}

// PrivateOrderCancelOperationsReqMessage defines model for PrivateOrderCancelOperationsReqMessage.
type PrivateOrderCancelOperationsReqMessage struct {
	Details     string `json:"details"`
	OperationId string `json:"operation_id"`
}

// PrivateOrderCancelOperationsRes defines model for PrivateOrderCancelOperationsRes.
type PrivateOrderCancelOperationsRes = map[string]interface{}

// PrivateOrderProcessPaymentNotificationsReq defines model for PrivateOrderProcessPaymentNotificationsReq.
type PrivateOrderProcessPaymentNotificationsReq struct {
	Messages []PrivateOrderProcessPaymentNotificationsReqMessage `json:"messages"`
}

// PrivateOrderProcessPaymentNotificationsReqMessage defines model for PrivateOrderProcessPaymentNotificationsReqMessage.
type PrivateOrderProcessPaymentNotificationsReqMessage struct {
	Amount          float64                `json:"amount"`
	CurrencyIso4217 int                    `json:"currency_iso_4217"`
	Datetime        time.Time              `json:"datetime"`
	OrderId         string                 `json:"order_id"`
	ProviderMeta    map[string]interface{} `json:"provider_meta"`
}

// PrivateOrderProcessPaymentNotificationsRes defines model for PrivateOrderProcessPaymentNotificationsRes.
type PrivateOrderProcessPaymentNotificationsRes = map[string]interface{}

// PrivateOrderProcessPublishedCartPositionsReq defines model for PrivateOrderProcessPublishedCartPositionsReq.
type PrivateOrderProcessPublishedCartPositionsReq struct {
	Messages []PrivateOrderProcessPublishedCartPositionsReqMessage `json:"messages"`
}

// PrivateOrderProcessPublishedCartPositionsReqCartPosition defines model for PrivateOrderProcessPublishedCartPositionsReqCartPosition.
type PrivateOrderProcessPublishedCartPositionsReqCartPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// PrivateOrderProcessPublishedCartPositionsReqMessage defines model for PrivateOrderProcessPublishedCartPositionsReqMessage.
type PrivateOrderProcessPublishedCartPositionsReqMessage struct {
	CartPositions []PrivateOrderProcessPublishedCartPositionsReqCartPosition `json:"cart_positions"`
	OperationId   string                                                     `json:"operation_id"`
}

// PrivateOrderProcessPublishedCartPositionsRes defines model for PrivateOrderProcessPublishedCartPositionsRes.
type PrivateOrderProcessPublishedCartPositionsRes = map[string]interface{}

// PrivateOrderProcessReservedProductsReq defines model for PrivateOrderProcessReservedProductsReq.
type PrivateOrderProcessReservedProductsReq struct {
	Messages []PrivateOrderProcessReservedProductsReqMessage `json:"messages"`
}

// PrivateOrderProcessReservedProductsReqMessage defines model for PrivateOrderProcessReservedProductsReqMessage.
type PrivateOrderProcessReservedProductsReqMessage struct {
	OperationId string                                          `json:"operation_id"`
	Products    []PrivateOrderProcessReservedProductsReqProduct `json:"products"`
}

// PrivateOrderProcessReservedProductsReqProduct defines model for PrivateOrderProcessReservedProductsReqProduct.
type PrivateOrderProcessReservedProductsReqProduct struct {
	Count    int     `json:"count"`
	Id       string  `json:"id"`
	Name     string  `json:"name"`
	Picture  *string `json:"picture,omitempty"`
	Price    float64 `json:"price"`
	SellerId string  `json:"seller_id"`
}

// PrivateOrderProcessReservedProductsRes defines model for PrivateOrderProcessReservedProductsRes.
type PrivateOrderProcessReservedProductsRes = map[string]interface{}

// PrivateOrderProcessUnreservedProductsReq defines model for PrivateOrderProcessUnreservedProductsReq.
type PrivateOrderProcessUnreservedProductsReq struct {
	Messages []PrivateOrderProcessUnreservedProductsReqMessage `json:"messages"`
}

// PrivateOrderProcessUnreservedProductsReqMessage defines model for PrivateOrderProcessUnreservedProductsReqMessage.
type PrivateOrderProcessUnreservedProductsReqMessage struct {
	OrderId string `json:"order_id"`
}

// PrivateOrderProcessUnreservedProductsRes defines model for PrivateOrderProcessUnreservedProductsRes.
type PrivateOrderProcessUnreservedProductsRes = map[string]interface{}

// PrivatePublishCartPositionsReq defines model for PrivatePublishCartPositionsReq.
type PrivatePublishCartPositionsReq struct {
	Messages []PrivatePublishCartPositionsReqMessage `json:"messages"`
}

// PrivatePublishCartPositionsReqMessage defines model for PrivatePublishCartPositionsReqMessage.
type PrivatePublishCartPositionsReqMessage struct {
	OperationId string `json:"operation_id"`
	UserId      string `json:"user_id"`
}

// PrivatePublishCartPositionsRes defines model for PrivatePublishCartPositionsRes.
type PrivatePublishCartPositionsRes = map[string]interface{}

// PrivateReserveProductsReq defines model for PrivateReserveProductsReq.
type PrivateReserveProductsReq struct {
	Messages []PrivateReserveProductsReqMessage `json:"messages"`
}

// PrivateReserveProductsReqMessage defines model for PrivateReserveProductsReqMessage.
type PrivateReserveProductsReqMessage struct {
	OperationId string                             `json:"operation_id"`
	Products    []PrivateReserveProductsReqProduct `json:"products"`
}

// PrivateReserveProductsReqProduct defines model for PrivateReserveProductsReqProduct.
type PrivateReserveProductsReqProduct struct {
	Count int    `json:"count"`
	Id    string `json:"id"`
}

// PrivateReserveProductsRes defines model for PrivateReserveProductsRes.
type PrivateReserveProductsRes = map[string]interface{}

// PrivateUnreserveProductsReq defines model for PrivateUnreserveProductsReq.
type PrivateUnreserveProductsReq struct {
	Messages []PrivateUnreserveProductsReqMessage `json:"messages"`
}

// PrivateUnreserveProductsReqMessage defines model for PrivateUnreserveProductsReqMessage.
type PrivateUnreserveProductsReqMessage struct {
	OrderId  string                               `json:"order_id"`
	Products []PrivateUnreserveProductsReqProduct `json:"products"`
}

// PrivateUnreserveProductsReqProduct defines model for PrivateUnreserveProductsReqProduct.
type PrivateUnreserveProductsReqProduct struct {
	Count int    `json:"count"`
	Id    string `json:"id"`
}

// PrivateUnreserveProductsRes defines model for PrivateUnreserveProductsRes.
type PrivateUnreserveProductsRes = map[string]interface{}

// ReplaceRefreshTokenReq defines model for ReplaceRefreshTokenReq.
type ReplaceRefreshTokenReq struct {
	RefreshToken string `json:"refresh_token"`
}

// ReplaceRefreshTokenRes defines model for ReplaceRefreshTokenRes.
type ReplaceRefreshTokenRes struct {
	ExpiresAt    string `json:"expires_at"`
	RefreshToken string `json:"refresh_token"`
}

// UpdateProductReq defines model for UpdateProductReq.
type UpdateProductReq struct {
	Description *string                 `json:"description,omitempty"`
	Metadata    *map[string]interface{} `json:"metadata,omitempty"`
	Name        *string                 `json:"name,omitempty"`
	Price       *float64                `json:"price,omitempty"`

	// StockDelta The amount of "in stock" product count change, either of:
	// - positive: stock amount is increased (seller releases more products)
	// - negative: stock amount is decreased (item purchased)
	StockDelta *int `json:"stock_delta,omitempty"`
}

// UpdateProductRes defines model for UpdateProductRes.
type UpdateProductRes struct {
	Description *string                 `json:"description,omitempty"`
	Metadata    *map[string]interface{} `json:"metadata,omitempty"`
	Name        *string                 `json:"name,omitempty"`
	Price       *float64                `json:"price,omitempty"`
	Stock       *int                    `json:"stock,omitempty"`
}

// UploadProductPictureRes defines model for UploadProductPictureRes.
type UploadProductPictureRes struct {
	Id  string `json:"id"`
	Url string `json:"url"`
}

// Error defines model for Error.
type Error struct {
	Errors []Err `json:"errors"`
}

// OrdersListOrdersParams defines parameters for OrdersListOrders.
type OrdersListOrdersParams struct {
	UserId        string  `form:"user_id" json:"user_id"`
	NextPageToken *string `form:"next_page_token,omitempty" json:"next_page_token,omitempty"`
}

// PrivateOrdersBatchCancelUnpaidOrdersJSONRequestBody defines body for PrivateOrdersBatchCancelUnpaidOrders for application/json ContentType.
type PrivateOrdersBatchCancelUnpaidOrdersJSONRequestBody = PrivateOrderBatchCancelUnpaidOrdersReq

// PrivateOrdersCancelOperationsJSONRequestBody defines body for PrivateOrdersCancelOperations for application/json ContentType.
type PrivateOrdersCancelOperationsJSONRequestBody = PrivateOrderCancelOperationsReq

// PrivateOrdersProcessPaymentNotificationsJSONRequestBody defines body for PrivateOrdersProcessPaymentNotifications for application/json ContentType.
type PrivateOrdersProcessPaymentNotificationsJSONRequestBody = PrivateOrderProcessPaymentNotificationsReq

// PrivateOrdersProcessPublishedCartPositionsJSONRequestBody defines body for PrivateOrdersProcessPublishedCartPositions for application/json ContentType.
type PrivateOrdersProcessPublishedCartPositionsJSONRequestBody = PrivateOrderProcessPublishedCartPositionsReq

// PrivateOrdersProcessReservedProductsJSONRequestBody defines body for PrivateOrdersProcessReservedProducts for application/json ContentType.
type PrivateOrdersProcessReservedProductsJSONRequestBody = PrivateOrderProcessReservedProductsReq

// PrivateOrdersProcessUnreservedProductsJSONRequestBody defines body for PrivateOrdersProcessUnreservedProducts for application/json ContentType.
type PrivateOrdersProcessUnreservedProductsJSONRequestBody = PrivateOrderProcessUnreservedProductsReq

// OrdersUpdateOrderJSONRequestBody defines body for OrdersUpdateOrder for application/json ContentType.
type OrdersUpdateOrderJSONRequestBody = OrdersUpdateOrderReq

// OrdersProcessPaymentYoomoneyFormdataRequestBody defines body for OrdersProcessPaymentYoomoney for application/x-www-form-urlencoded ContentType.
type OrdersProcessPaymentYoomoneyFormdataRequestBody = OrdersProcessYoomoneyPaymentReq

// Method & Path constants for routes.
// Batch cancel unpaid orders
const PrivateOrdersBatchCancelUnpaidOrdersMethod = "POST"
const PrivateOrdersBatchCancelUnpaidOrdersPath = "/api/private/v1/order/batch-cancel-unpaid-orders"

// Cancel order operations
const PrivateOrdersCancelOperationsMethod = "POST"
const PrivateOrdersCancelOperationsPath = "/api/private/v1/order/operations/cancel"

// Process payment notifications
const PrivateOrdersProcessPaymentNotificationsMethod = "POST"
const PrivateOrdersProcessPaymentNotificationsPath = "/api/private/v1/order/process-payment-notifications"

// Process published cart positions
const PrivateOrdersProcessPublishedCartPositionsMethod = "POST"
const PrivateOrdersProcessPublishedCartPositionsPath = "/api/private/v1/order/process-published-cart-positions"

// Process reserved products
const PrivateOrdersProcessReservedProductsMethod = "POST"
const PrivateOrdersProcessReservedProductsPath = "/api/private/v1/order/process-reserved-products"

// Process unreserved products
const PrivateOrdersProcessUnreservedProductsMethod = "POST"
const PrivateOrdersProcessUnreservedProductsPath = "/api/private/v1/order/process-unreserved-products"

// Get orders operation
const OrdersGetOperationMethod = "GET"
const OrdersGetOperationPath = "/api/v1/order/operations/:operation_id"

// List orders
const OrdersListOrdersMethod = "GET"
const OrdersListOrdersPath = "/api/v1/order/orders"

// Create order
const OrdersCreateOrderMethod = "POST"
const OrdersCreateOrderPath = "/api/v1/order/orders"

// Get order
const OrdersGetOrderMethod = "GET"
const OrdersGetOrderPath = "/api/v1/order/orders/:order_id"

// Update order
const OrdersUpdateOrderMethod = "PATCH"
const OrdersUpdateOrderPath = "/api/v1/order/orders/:order_id"

// Process YooMoney Payment Notification
const OrdersProcessPaymentYoomoneyMethod = "POST"
const OrdersProcessPaymentYoomoneyPath = "/api/v1/order/process-payment/yoomoney"

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Batch cancel unpaid orders
	// (POST /api/private/v1/order/batch-cancel-unpaid-orders)
	PrivateOrdersBatchCancelUnpaidOrders(c *gin.Context)
	// Cancel order operations
	// (POST /api/private/v1/order/operations/cancel)
	PrivateOrdersCancelOperations(c *gin.Context)
	// Process payment notifications
	// (POST /api/private/v1/order/process-payment-notifications)
	PrivateOrdersProcessPaymentNotifications(c *gin.Context)
	// Process published cart positions
	// (POST /api/private/v1/order/process-published-cart-positions)
	PrivateOrdersProcessPublishedCartPositions(c *gin.Context)
	// Process reserved products
	// (POST /api/private/v1/order/process-reserved-products)
	PrivateOrdersProcessReservedProducts(c *gin.Context)
	// Process unreserved products
	// (POST /api/private/v1/order/process-unreserved-products)
	PrivateOrdersProcessUnreservedProducts(c *gin.Context)
	// Get orders operation
	// (GET /api/v1/order/operations/{operation_id})
	OrdersGetOperation(c *gin.Context, operationId string)
	// List orders
	// (GET /api/v1/order/orders)
	OrdersListOrders(c *gin.Context, params OrdersListOrdersParams)
	// Create order
	// (POST /api/v1/order/orders)
	OrdersCreateOrder(c *gin.Context)
	// Get order
	// (GET /api/v1/order/orders/{order_id})
	OrdersGetOrder(c *gin.Context, orderId string)
	// Update order
	// (PATCH /api/v1/order/orders/{order_id})
	OrdersUpdateOrder(c *gin.Context, orderId string)
	// Process YooMoney Payment Notification
	// (POST /api/v1/order/process-payment/yoomoney)
	OrdersProcessPaymentYoomoney(c *gin.Context)
}

// ServerInterfaceWrapper converts contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler            ServerInterface
	HandlerMiddlewares []MiddlewareFunc
	ErrorHandler       func(*gin.Context, error, int)
}

type MiddlewareFunc func(c *gin.Context)

// PrivateOrdersBatchCancelUnpaidOrders operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersBatchCancelUnpaidOrders(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersBatchCancelUnpaidOrders(c)
}

// PrivateOrdersCancelOperations operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersCancelOperations(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersCancelOperations(c)
}

// PrivateOrdersProcessPaymentNotifications operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersProcessPaymentNotifications(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersProcessPaymentNotifications(c)
}

// PrivateOrdersProcessPublishedCartPositions operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersProcessPublishedCartPositions(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersProcessPublishedCartPositions(c)
}

// PrivateOrdersProcessReservedProducts operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersProcessReservedProducts(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersProcessReservedProducts(c)
}

// PrivateOrdersProcessUnreservedProducts operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersProcessUnreservedProducts(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersProcessUnreservedProducts(c)
}

// OrdersGetOperation operation middleware
func (siw *ServerInterfaceWrapper) OrdersGetOperation(c *gin.Context) {

	var err error

	// ------------- Path parameter "operation_id" -------------
	var operationId string

	err = runtime.BindStyledParameterWithOptions("simple", "operation_id", c.Param("operation_id"), &operationId, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandler(c, fmt.Errorf("Invalid format for parameter operation_id: %w", err), http.StatusBadRequest)
		return
	}

	c.Set(BearerAuthScopes, []string{})

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.OrdersGetOperation(c, operationId)
}

// OrdersListOrders operation middleware
func (siw *ServerInterfaceWrapper) OrdersListOrders(c *gin.Context) {

	var err error

	c.Set(BearerAuthScopes, []string{})

	// Parameter object where we will unmarshal all parameters from the context
	var params OrdersListOrdersParams

	// ------------- Required query parameter "user_id" -------------

	if paramValue := c.Query("user_id"); paramValue != "" {

	} else {
		siw.ErrorHandler(c, fmt.Errorf("Query argument user_id is required, but not found"), http.StatusBadRequest)
		return
	}

	err = runtime.BindQueryParameter("form", true, true, "user_id", c.Request.URL.Query(), &params.UserId)
	if err != nil {
		siw.ErrorHandler(c, fmt.Errorf("Invalid format for parameter user_id: %w", err), http.StatusBadRequest)
		return
	}

	// ------------- Optional query parameter "next_page_token" -------------

	err = runtime.BindQueryParameter("form", true, false, "next_page_token", c.Request.URL.Query(), &params.NextPageToken)
	if err != nil {
		siw.ErrorHandler(c, fmt.Errorf("Invalid format for parameter next_page_token: %w", err), http.StatusBadRequest)
		return
	}

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.OrdersListOrders(c, params)
}

// OrdersCreateOrder operation middleware
func (siw *ServerInterfaceWrapper) OrdersCreateOrder(c *gin.Context) {

	c.Set(BearerAuthScopes, []string{})

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.OrdersCreateOrder(c)
}

// OrdersGetOrder operation middleware
func (siw *ServerInterfaceWrapper) OrdersGetOrder(c *gin.Context) {

	var err error

	// ------------- Path parameter "order_id" -------------
	var orderId string

	err = runtime.BindStyledParameterWithOptions("simple", "order_id", c.Param("order_id"), &orderId, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandler(c, fmt.Errorf("Invalid format for parameter order_id: %w", err), http.StatusBadRequest)
		return
	}

	c.Set(BearerAuthScopes, []string{})

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.OrdersGetOrder(c, orderId)
}

// OrdersUpdateOrder operation middleware
func (siw *ServerInterfaceWrapper) OrdersUpdateOrder(c *gin.Context) {

	var err error

	// ------------- Path parameter "order_id" -------------
	var orderId string

	err = runtime.BindStyledParameterWithOptions("simple", "order_id", c.Param("order_id"), &orderId, runtime.BindStyledParameterOptions{Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandler(c, fmt.Errorf("Invalid format for parameter order_id: %w", err), http.StatusBadRequest)
		return
	}

	c.Set(BearerAuthScopes, []string{})

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.OrdersUpdateOrder(c, orderId)
}

// OrdersProcessPaymentYoomoney operation middleware
func (siw *ServerInterfaceWrapper) OrdersProcessPaymentYoomoney(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.OrdersProcessPaymentYoomoney(c)
}

// GinServerOptions provides options for the Gin server.
type GinServerOptions struct {
	BaseURL      string
	Middlewares  []MiddlewareFunc
	ErrorHandler func(*gin.Context, error, int)
}

// RegisterHandlers creates http.Handler with routing matching OpenAPI spec.
func RegisterHandlers(router gin.IRouter, si ServerInterface) {
	RegisterHandlersWithOptions(router, si, GinServerOptions{})
}

// RegisterHandlersWithOptions creates http.Handler with additional options
func RegisterHandlersWithOptions(router gin.IRouter, si ServerInterface, options GinServerOptions) {
	errorHandler := options.ErrorHandler
	if errorHandler == nil {
		errorHandler = func(c *gin.Context, err error, statusCode int) {
			c.JSON(statusCode, gin.H{"msg": err.Error()})
		}
	}

	wrapper := ServerInterfaceWrapper{
		Handler:            si,
		HandlerMiddlewares: options.Middlewares,
		ErrorHandler:       errorHandler,
	}

	router.POST(options.BaseURL+"/api/private/v1/order/batch-cancel-unpaid-orders", wrapper.PrivateOrdersBatchCancelUnpaidOrders)
	router.POST(options.BaseURL+"/api/private/v1/order/operations/cancel", wrapper.PrivateOrdersCancelOperations)
	router.POST(options.BaseURL+"/api/private/v1/order/process-payment-notifications", wrapper.PrivateOrdersProcessPaymentNotifications)
	router.POST(options.BaseURL+"/api/private/v1/order/process-published-cart-positions", wrapper.PrivateOrdersProcessPublishedCartPositions)
	router.POST(options.BaseURL+"/api/private/v1/order/process-reserved-products", wrapper.PrivateOrdersProcessReservedProducts)
	router.POST(options.BaseURL+"/api/private/v1/order/process-unreserved-products", wrapper.PrivateOrdersProcessUnreservedProducts)
	router.GET(options.BaseURL+"/api/v1/order/operations/:operation_id", wrapper.OrdersGetOperation)
	router.GET(options.BaseURL+"/api/v1/order/orders", wrapper.OrdersListOrders)
	router.POST(options.BaseURL+"/api/v1/order/orders", wrapper.OrdersCreateOrder)
	router.GET(options.BaseURL+"/api/v1/order/orders/:order_id", wrapper.OrdersGetOrder)
	router.PATCH(options.BaseURL+"/api/v1/order/orders/:order_id", wrapper.OrdersUpdateOrder)
	router.POST(options.BaseURL+"/api/v1/order/process-payment/yoomoney", wrapper.OrdersProcessPaymentYoomoney)
}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xdWW/cOBL+K4J2H3YAKW0ns5OF3zJZIwh2sjGcBNhBYjRoqbqbsSQqJOW41+j/PuCh",
	"m9TRrZad401u8ajjqyqyipTv3YDEKUkg4cw9u3cpsJQkDOQf55QSKh4CknBIuHhEaRrhAHFMksVnRhLx",
	"Gws2ECP5NgyxeIWiC0pSoByLkVYoYuC5aeWnexfE4PIJc4jlw98prNwz92+LkqaFGpstzil1d57Ltym4",
	"Zy6iFG3d3c5zKXzJMIXQPfuYD3lVNCPXnyHg7k40DIEFFKeCOvdMNZUD6AnE/C8yvoGEC/bgEr6MZShG",
	"OBIPenLGKU7WgugUMfaV0NDwssmBHKPSo82L1yCTjSXzLsUU2BJxI60UVhTYZsnJDST9BNebe9XRTaS/",
	"RJS/jABR8TCE9t4RLgjDSqejpBCQLKkKACcc1iAhllISZgFf4gH6qrT19Jg2tv8NEXAQTznJ43UXyjHC",
	"ZVphustorPMWUmsy1JphFDvfjDJeAa+SzsarIhfQcA9mmbdURY93K2ccwdU3o5F3ddrHK4QBH2UX7Qmt",
	"RlEbejgD34jsOYrI+hXw8SJP4I4vU7SGMlokWRSh6wjcM06z0n9XYqEia4zZVAi8UL37bSWfxWsR2SuE",
	"fI5xsjCqxHMTFIN5TYADnlFQXr26MsmoWAAMkCMOZO8VobGI5W5IMtGhaJtk8TXQlmgkHiRZ+SBGiVBA",
	"HF4EATD2Xsht/HrooJXEQJrGIhbJzlaSvO7VUYPi2mD9Sx9JvQbXeGnWQGIgPAaOQsRR5WU5tx2Fg1Hk",
	"uYyT4Mbklxpi0diqElwhLx+nH3yFqMYqOZDdQ9sKt0+SFkveU8DKzHu93CvgJb8XeaexGoIoArq0MGDV",
	"n+dmaWiXmMl/lDN5Zn0XfHeo3qtqqkaEHRTv5MQvAhnQxltRr/0rxuQCb+Dmzq76wbs+LcEBm7/WwkRS",
	"69X5Giw9NtkO1yIEa+ixk/iBHaDeo2opV08eO7u26AZeHpew1fZNuxztb8bTOGQdisN+Amad+ZzS0Svy",
	"EMyOMwbG0HqANuQQZXsTXbUQ8DPk/Qx5rklC02xLxCZjGNui5VDahm/qjJy1NnWe+wdmeUP2SPenDRKP",
	"tEO1zDLLHnVpRst0htqxQ61aXW5CVbJMsnpLQ6BMhWD5PB454hkNySSZ5npbdG5yVg47lO63VUKmCwgW",
	"JBAxq92ZIp4x4yv1g8nPdHlZz83YGEjIJgUdZe9xTlVJ+RXwQrRHCLcc4Yj9lLxN8vsZ5X6YLpz4IG/e",
	"ovE1h9gUmTp0MqnoS1EX0leMHCh7yddkielZQkhn9ntUhKnlxg0LO8VpV4pKyVNEZfU0z+JEeomxYK4R",
	"KR96Fyd6nmFLE8MsP8E1NbiU3h6rv2wr/zF6TLuoLygJgLE/CYlJAtsLtI2hyD81MohxDtQBoAoySiEJ",
	"tjKfk2Sxe/bxt1+fXRlaCv45jhtoRRx8+avBF0ToGqJBXiMhHK/0mZ1lvmDQ5Ljp09THSUBi0dhzA0TD",
	"8u8rkw/Kl01WU9mg0+UGsU27tiVeOeKVwzeIO5g5GYPQ4cQJNhDcOHwDjjR8ivnWISsnVZpwUqUgnKwd",
	"oW9g3K0gtZ24QHev1ctTz41xUv7R7faqrHm5qk0CrCisouUq7+PBxoxpFtXngzQQHbvHZkWthtfMJqt2",
	"dsprVLCpqBiXiynXoN0LnguKbxGH4qhQ5VDEWPnppN1wp9g19xudAewLwcWkLeY8987naM1UrJEzLVGK",
	"3asert+UucoRzA/2vXnDqeg1mMOAkSQ4f0c82LxESQDRhyRFOMxj05cjjHkAnWq4Yh86IzRt08+Czr7J",
	"xxbG7ZvtnljV7f7zgSdk8QCs6Kiho8V/KxFpbth0UzIfgobRMbI+vM/qbokZWf769PS5efsyfmnXmQxK",
	"KbnF4n0MxsqMaSvXWM+0CW8OW6H6OPqZwBKy6wizDYQPFN0H0TK/Ndgoqf79eA8kTsXtftYfIFoe9DwO",
	"IGpqMGySx0WsBsGN7seS7uG2ewkM6C2EZUXrIazWQMXs9tpBw54Vq464Ma6wOYzaPeqdk4K0g6TJvNwB",
	"Z3tnrZmOTzYeLOzDfcGHhD4Kb2CkY3Z/0EnFSI9gX0Xa1ojHoH4/hOjY80BrO8vss6ChZ+6Jo8Lg9E5j",
	"c3xItsfM4X440R5pftfRnngWdNinfSTLhTaBQ1cIDYQVBEwjpnkWBaaovP9Wp8XFfjZSeOX5rcQ09Sx2",
	"0jXxZGF0fysxkTfYTsqMzkE20kXDt2QlBj5G2sklpBEK4FLdQHss192MVH1Tt/1VvXDElbcYJ9VfTx/p",
	"JbhlCJGapF7efr8BRyVZHbJyPrk4cWT7T66jLdWRMHeCDUrW4DmA+QaoQ1ZnnxLfUYmcWzhTvfKhMHNw",
	"ElBADELnH2qP51CIxA/MiQmFfHT2ixgmgTUyDxNCMYxwVk6a0WAj/v6lZLV6q69Poex7UajlVqOB/4ig",
	"8Ci3Zg4/ky8TBkFGMd++E9FGTXYNiAJ9kXF5HAMLmG4AhfLWmBKg+z9fvCYU/x/pqwx5/Enxf2CrPp+C",
	"kxWR5GEeiXfnAYmdFxevXc+9BcqUAZw8OX1yotOYifCuZ+6zJydPTuR1Kb6RBC1QihfaAy9uTxcBonwR",
	"RICorz8zI5vd+bqNL8fhNIOdZ+6cqv3EHt1lKF1cIx5s/EBW6/xMFnf98qRdShhvm7osBzuqj6P6OMWp",
	"uWIl+zp0z2r7ZGYpI7tKy8D47yTcjvrkztA0R0dRfLdTMKt8+ufpycm8VDDTV3rsUnYKGTuMI8qdnHp1",
	"/nqFsojb6CoYXZyXXwHK4hjRbZ9m8xWE/kEsHsYgrSCaLdQEdoApGamZS2Z70NWsOM8AK9MZhhnxZKqx",
	"G4Bkkaajb5wdBBi7pg5Eiz705utDcH71GFqHa9K5uOLsXL1bJ346SrYzQKnniMOMqOopXRsA1iXzSVDW",
	"p9WpsJbX/HwRWv1aMbQHbnlPR/R0jFVJO+KMpcYZMWc9TPAAqLOWXQ24u7BIvX5idqLQOEDVE8EwLyP4",
	"1QRLN/7yLo6p0mgFXrOiNR/kTDXw+cFmqugZYHbZFO5R8WVS5UTAypI9oFV2Kvn39RKRqcA/CGzt8th8",
	"cDOXWecHnLlEaPJsHcKfHHGGSQ7BXD7GQo86fEda9Cwo6ul7e7pAGd8sApKsMI3P86+G3PnbQLReIw5f",
	"0dYP9MdWY+AbEjLB+9t37wVsKV7jRA9aGVVure91nW+3qK4EBrRa3JfHvXbNLvJja/UfW/uj+2o5SIzg",
	"roHXKlfSzNq3eWWugaIYuNzAf2watdjOreRNE1LpIhMjKeKbMi3SqEeVWRh1zaa0gGbG5uqIFmW+vWww",
	"n7fNbXKKthFB4b4mozNLUqDVnNLHK8FvaVGvgLe26AZT8loAVfd+irvuQloIJ7r04l5fI8whur6ON//M",
	"bm5ukgSfyhMv9BYHsETqKzuqLfoMzwE/T29+i9KnJ6sv/3r+bFU5ZiuMikbA2LKYQy7PmwTdogiHiKsv",
	"IOs/4LLqrZXJtFFc5I40ZOua+QMzbssVNa/TtcEsgfolA7otkVreeBsOUs88VPPC58PivH6/1obyuaBd",
	"V9x3jGjPlpOSF0otC57W1yvco8Oj8YmPh8ZHQzw/nstb3Oe16SEBW4upM1irpJp0baYIXVbCH1t0fiyY",
	"LMLxd++xEA8MN45VxVInZ31deHUYRxwsHqxyyfWh0Dn9htB4i/jImz/jneGHtocqHn4wH90oJyy2+gJ6",
	"f/7jT0LeiJaOTog71Yy4xYzqKfT8svvgfMed//XrV39FaOxnNIIkICGEY7Fn/6zDLNC3X/Q3WAG5qWQ1",
	"jDmKPi38GFiuZO0Mv3akHYxNFpWPVQ5uu7hvDS52YEwmYvJ/zGJ6HzQ/YN7ZSB+qszSofcrX1Iy2j4+J",
	"ZrsCKE1rr/xbGVlWV3ov45ngzhX7xpaTUEm5VodCVe1O+oP77T55csjUhXJTe8oNjXX2o9Vc28buavdX",
	"AAAA//8YjDL5+WgAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
