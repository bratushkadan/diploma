// Package oapi_codegen provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package oapi_codegen

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	"github.com/gin-gonic/gin"
)

// AuthenticateReq defines model for AuthenticateReq.
type AuthenticateReq struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// AuthenticateRes defines model for AuthenticateRes.
type AuthenticateRes struct {
	ExpiresAt    string `json:"expires_at"`
	RefreshToken string `json:"refresh_token"`
}

// CartClearCartRes defines model for CartClearCartRes.
type CartClearCartRes struct {
	DeletedPositions []CartClearCartResPosition `json:"deleted_positions"`
}

// CartClearCartResPosition defines model for CartClearCartResPosition.
type CartClearCartResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CartDeleteCartPositionRes defines model for CartDeleteCartPositionRes.
type CartDeleteCartPositionRes struct {
	DeletedPosition CartDeleteCartPositionResPosition `json:"deleted_position"`
}

// CartDeleteCartPositionResPosition defines model for CartDeleteCartPositionResPosition.
type CartDeleteCartPositionResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CartGetCartPositionsRes defines model for CartGetCartPositionsRes.
type CartGetCartPositionsRes struct {
	Positions []CartGetCartPositionsResPosition `json:"positions"`
}

// CartGetCartPositionsResPosition defines model for CartGetCartPositionsResPosition.
type CartGetCartPositionsResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CartSetCartPositionRes defines model for CartSetCartPositionRes.
type CartSetCartPositionRes struct {
	SetPosition CartSetCartPositionResPosition `json:"set_position"`
}

// CartSetCartPositionResPosition defines model for CartSetCartPositionResPosition.
type CartSetCartPositionResPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// CatalogGetRes defines model for CatalogGetRes.
type CatalogGetRes struct {
	NextPageToken *string                `json:"next_page_token"`
	Products      []CatalogGetResProduct `json:"products"`
}

// CatalogGetResProduct defines model for CatalogGetResProduct.
type CatalogGetResProduct struct {
	Id   string `json:"id"`
	Name string `json:"name"`

	// Picture url
	Picture *string `json:"picture"`
	Price   float64 `json:"price"`
}

// CreateAccessTokenReq defines model for CreateAccessTokenReq.
type CreateAccessTokenReq struct {
	RefreshToken string `json:"refresh_token"`
}

// CreateAccessTokenRes defines model for CreateAccessTokenRes.
type CreateAccessTokenRes struct {
	AccessToken string `json:"access_token"`
	ExpiresAt   string `json:"expires_at"`
}

// CreateProductReq defines model for CreateProductReq.
type CreateProductReq struct {
	Description string                 `json:"description"`
	Metadata    map[string]interface{} `json:"metadata"`
	Name        string                 `json:"name"`
	Price       float64                `json:"price"`
	Stock       int                    `json:"stock"`
}

// CreateProductRes defines model for CreateProductRes.
type CreateProductRes struct {
	CreatedAt   string                 `json:"created_at"`
	Description string                 `json:"description"`
	Id          string                 `json:"id"`
	Metadata    map[string]interface{} `json:"metadata"`
	Name        string                 `json:"name"`
	Pictures    GetProductResPictures  `json:"pictures"`
	Price       float64                `json:"price"`
	SellerId    string                 `json:"seller_id"`
	Stock       int                    `json:"stock"`
	UpdatedAt   string                 `json:"updated_at"`
}

// CreateSellerAccountReq defines model for CreateSellerAccountReq.
type CreateSellerAccountReq struct {
	AccessToken string `json:"access_token"`
	Seller      struct {
		Email    string `json:"email"`
		Name     string `json:"name"`
		Password string `json:"password"`
	} `json:"seller"`
}

// CreateSellerAccountRes defines model for CreateSellerAccountRes.
type CreateSellerAccountRes struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// CreateUserAccountReq defines model for CreateUserAccountReq.
type CreateUserAccountReq struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
}

// CreateUserAccountRes defines model for CreateUserAccountRes.
type CreateUserAccountRes struct {
	Email *string `json:"email,omitempty"`
	Name  string  `json:"name"`
}

// DeleteProductPictureRes defines model for DeleteProductPictureRes.
type DeleteProductPictureRes struct {
	Id string `json:"id"`
}

// DeleteProductRes defines model for DeleteProductRes.
type DeleteProductRes struct {
	Id string `json:"id"`
}

// Err defines model for Err.
type Err struct {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

// GetProductRes defines model for GetProductRes.
type GetProductRes struct {
	CreatedAt   string                 `json:"created_at"`
	Description string                 `json:"description"`
	Id          string                 `json:"id"`
	Metadata    map[string]interface{} `json:"metadata"`
	Name        string                 `json:"name"`
	Pictures    GetProductResPictures  `json:"pictures"`
	Price       float64                `json:"price"`
	SellerId    string                 `json:"seller_id"`
	Stock       int                    `json:"stock"`
	UpdatedAt   string                 `json:"updated_at"`
}

// GetProductResPicture defines model for GetProductResPicture.
type GetProductResPicture struct {
	Id  string `json:"id"`
	Url string `json:"url"`
}

// GetProductResPictures defines model for GetProductResPictures.
type GetProductResPictures = []GetProductResPicture

// ListProductsRes defines model for ListProductsRes.
type ListProductsRes struct {
	NextPageToken *string                  `json:"next_page_token"`
	Products      []ListProductsResProduct `json:"products"`
}

// ListProductsResProduct defines model for ListProductsResProduct.
type ListProductsResProduct struct {
	Id         string  `json:"id"`
	Name       string  `json:"name"`
	PictureUrl string  `json:"picture_url"`
	Price      float64 `json:"price"`
	SellerId   string  `json:"seller_id"`
}

// PrivateClearCartPositionsReq defines model for PrivateClearCartPositionsReq.
type PrivateClearCartPositionsReq struct {
	Messages []PrivateClearCartPositionsReqMessage `json:"messages"`
}

// PrivateClearCartPositionsReqMessage defines model for PrivateClearCartPositionsReqMessage.
type PrivateClearCartPositionsReqMessage struct {
	UserId string `json:"user_id"`
}

// PrivateClearCartPositionsRes defines model for PrivateClearCartPositionsRes.
type PrivateClearCartPositionsRes = map[string]interface{}

// PrivateFeedbackProcessCompletedOrderReq defines model for PrivateFeedbackProcessCompletedOrderReq.
type PrivateFeedbackProcessCompletedOrderReq struct {
	Messages []PrivateFeedbackProcessCompletedOrderReqMessage `json:"messages"`
}

// PrivateFeedbackProcessCompletedOrderReqMessage defines model for PrivateFeedbackProcessCompletedOrderReqMessage.
type PrivateFeedbackProcessCompletedOrderReqMessage struct {
	OrderId  string                                          `json:"order_id"`
	Products PrivateFeedbackProcessCompletedOrderReqProducts `json:"products"`
}

// PrivateFeedbackProcessCompletedOrderReqProducts defines model for PrivateFeedbackProcessCompletedOrderReqProducts.
type PrivateFeedbackProcessCompletedOrderReqProducts struct {
	Id string `json:"id"`
}

// PrivateFeedbackProcessCompletedOrderRes defines model for PrivateFeedbackProcessCompletedOrderRes.
type PrivateFeedbackProcessCompletedOrderRes = map[string]interface{}

// PrivateOrderBatchCancelUnpaidOrdersReq defines model for PrivateOrderBatchCancelUnpaidOrdersReq.
type PrivateOrderBatchCancelUnpaidOrdersReq = map[string]interface{}

// PrivateOrderBatchCancelUnpaidOrdersRes defines model for PrivateOrderBatchCancelUnpaidOrdersRes.
type PrivateOrderBatchCancelUnpaidOrdersRes = map[string]interface{}

// PrivateOrderCancelOrdersReq defines model for PrivateOrderCancelOrdersReq.
type PrivateOrderCancelOrdersReq struct {
	OrderId string `json:"order_id"`
}

// PrivateOrderCancelOrdersRes defines model for PrivateOrderCancelOrdersRes.
type PrivateOrderCancelOrdersRes = map[string]interface{}

// PrivateOrderProcessPublishedCartPositionsReq defines model for PrivateOrderProcessPublishedCartPositionsReq.
type PrivateOrderProcessPublishedCartPositionsReq struct {
	Messages []PrivateOrderProcessPublishedCartPositionsReqMessage `json:"messages"`
}

// PrivateOrderProcessPublishedCartPositionsReqCartPosition defines model for PrivateOrderProcessPublishedCartPositionsReqCartPosition.
type PrivateOrderProcessPublishedCartPositionsReqCartPosition struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// PrivateOrderProcessPublishedCartPositionsReqMessage defines model for PrivateOrderProcessPublishedCartPositionsReqMessage.
type PrivateOrderProcessPublishedCartPositionsReqMessage struct {
	CartPositions PrivateOrderProcessPublishedCartPositionsReqCartPosition `json:"cart_positions"`
	OrderId       string                                                   `json:"order_id"`
}

// PrivateOrderProcessPublishedCartPositionsRes defines model for PrivateOrderProcessPublishedCartPositionsRes.
type PrivateOrderProcessPublishedCartPositionsRes = map[string]interface{}

// PrivateOrderProcessReservedProductsReq defines model for PrivateOrderProcessReservedProductsReq.
type PrivateOrderProcessReservedProductsReq struct {
	Messages []PrivateOrderProcessReservedProductsReqMessage `json:"messages"`
}

// PrivateOrderProcessReservedProductsReqMessage defines model for PrivateOrderProcessReservedProductsReqMessage.
type PrivateOrderProcessReservedProductsReqMessage struct {
	OrderId  string                                        `json:"order_id"`
	Products PrivateOrderProcessReservedProductsReqProduct `json:"products"`
}

// PrivateOrderProcessReservedProductsReqProduct defines model for PrivateOrderProcessReservedProductsReqProduct.
type PrivateOrderProcessReservedProductsReqProduct struct {
	Count    int     `json:"count"`
	Id       string  `json:"id"`
	Name     string  `json:"name"`
	Picture  *string `json:"picture,omitempty"`
	Price    float64 `json:"price"`
	SellerId string  `json:"seller_id"`
}

// PrivateOrderProcessReservedProductsRes defines model for PrivateOrderProcessReservedProductsRes.
type PrivateOrderProcessReservedProductsRes = map[string]interface{}

// PrivatePublishCartPositionsReq defines model for PrivatePublishCartPositionsReq.
type PrivatePublishCartPositionsReq struct {
	Messages []PrivatePublishCartPositionsReqItem `json:"messages"`
}

// PrivatePublishCartPositionsReqItem defines model for PrivatePublishCartPositionsReqItem.
type PrivatePublishCartPositionsReqItem struct {
	Count     int    `json:"count"`
	ProductId string `json:"product_id"`
}

// PrivatePublishCartPositionsReqMessage defines model for PrivatePublishCartPositionsReqMessage.
type PrivatePublishCartPositionsReqMessage struct {
	CartPositions PrivatePublishCartPositionsReqItem `json:"cart_positions"`
	OrderId       string                             `json:"order_id"`
}

// PrivatePublishCartPositionsRes defines model for PrivatePublishCartPositionsRes.
type PrivatePublishCartPositionsRes = map[string]interface{}

// PrivateReserveProductsReq defines model for PrivateReserveProductsReq.
type PrivateReserveProductsReq struct {
	Messages []PrivateReserveProductsReqMessage `json:"messages"`
}

// PrivateReserveProductsReqMessage defines model for PrivateReserveProductsReqMessage.
type PrivateReserveProductsReqMessage struct {
	OrderId  string                           `json:"order_id"`
	Products PrivateReserveProductsReqProduct `json:"products"`
}

// PrivateReserveProductsReqProduct defines model for PrivateReserveProductsReqProduct.
type PrivateReserveProductsReqProduct struct {
	Count int    `json:"count"`
	Id    string `json:"id"`
}

// PrivateReserveProductsRes defines model for PrivateReserveProductsRes.
type PrivateReserveProductsRes = map[string]interface{}

// PrivateUnreserveProductsReq defines model for PrivateUnreserveProductsReq.
type PrivateUnreserveProductsReq struct {
	Messages []PrivateUnreserveProductsReqMessage `json:"messages"`
}

// PrivateUnreserveProductsReqMessage defines model for PrivateUnreserveProductsReqMessage.
type PrivateUnreserveProductsReqMessage struct {
	OrderId  string                             `json:"order_id"`
	Products []PrivateReserveProductsReqProduct `json:"products"`
}

// PrivateUnreserveProductsReqProduct defines model for PrivateUnreserveProductsReqProduct.
type PrivateUnreserveProductsReqProduct struct {
	Count int    `json:"count"`
	Id    string `json:"id"`
}

// PrivateUnreserveProductsRes defines model for PrivateUnreserveProductsRes.
type PrivateUnreserveProductsRes = map[string]interface{}

// ReplaceRefreshTokenReq defines model for ReplaceRefreshTokenReq.
type ReplaceRefreshTokenReq struct {
	RefreshToken string `json:"refresh_token"`
}

// ReplaceRefreshTokenRes defines model for ReplaceRefreshTokenRes.
type ReplaceRefreshTokenRes struct {
	ExpiresAt    string `json:"expires_at"`
	RefreshToken string `json:"refresh_token"`
}

// UpdateProductReq defines model for UpdateProductReq.
type UpdateProductReq struct {
	Description *string                 `json:"description,omitempty"`
	Metadata    *map[string]interface{} `json:"metadata,omitempty"`
	Name        *string                 `json:"name,omitempty"`
	Price       *float64                `json:"price,omitempty"`

	// StockDelta The amount of "in stock" product count change, either of:
	// - positive: stock amount is increased (seller releases more products)
	// - negative: stock amount is decreased (item purchased)
	StockDelta *int `json:"stock_delta,omitempty"`
}

// UpdateProductRes defines model for UpdateProductRes.
type UpdateProductRes struct {
	Description *string                 `json:"description,omitempty"`
	Metadata    *map[string]interface{} `json:"metadata,omitempty"`
	Name        *string                 `json:"name,omitempty"`
	Price       *float64                `json:"price,omitempty"`
	Stock       *int                    `json:"stock,omitempty"`
}

// UploadProductPictureRes defines model for UploadProductPictureRes.
type UploadProductPictureRes struct {
	Id  string `json:"id"`
	Url string `json:"url"`
}

// Error defines model for Error.
type Error struct {
	Errors []Err `json:"errors"`
}

// PrivateOrdersBatchCancelUnpaidOrdersJSONRequestBody defines body for PrivateOrdersBatchCancelUnpaidOrders for application/json ContentType.
type PrivateOrdersBatchCancelUnpaidOrdersJSONRequestBody = PrivateOrderBatchCancelUnpaidOrdersReq

// PrivateOrdersCancelOrdersJSONRequestBody defines body for PrivateOrdersCancelOrders for application/json ContentType.
type PrivateOrdersCancelOrdersJSONRequestBody = PrivateOrderCancelOrdersReq

// PrivateOrdersPublishedCartPositionsJSONRequestBody defines body for PrivateOrdersPublishedCartPositions for application/json ContentType.
type PrivateOrdersPublishedCartPositionsJSONRequestBody = PrivateOrderProcessPublishedCartPositionsReq

// PrivateOrdersProcessReservedProductsJSONRequestBody defines body for PrivateOrdersProcessReservedProducts for application/json ContentType.
type PrivateOrdersProcessReservedProductsJSONRequestBody = PrivateOrderProcessReservedProductsReq

// Method & Path constants for routes.
// Batch cancel unpaid orders
const PrivateOrdersBatchCancelUnpaidOrdersMethod = "POST"
const PrivateOrdersBatchCancelUnpaidOrdersPath = "/api/private/v1/order:batch-cancel-unpaid-orders"

// Cancel orders
const PrivateOrdersCancelOrdersMethod = "POST"
const PrivateOrdersCancelOrdersPath = "/api/private/v1/order:cancel-orders"

// Process published cart positions
const PrivateOrdersPublishedCartPositionsMethod = "POST"
const PrivateOrdersPublishedCartPositionsPath = "/api/private/v1/order:process-published-cart-positions"

// Process reserved products
const PrivateOrdersProcessReservedProductsMethod = "POST"
const PrivateOrdersProcessReservedProductsPath = "/api/private/v1/order:process-reserved-products"

// ServerInterface represents all server handlers.
type ServerInterface interface {
	// Batch cancel unpaid orders
	// (POST /api/private/v1/order:batch-cancel-unpaid-orders)
	PrivateOrdersBatchCancelUnpaidOrders(c *gin.Context)
	// Cancel orders
	// (POST /api/private/v1/order:cancel-orders)
	PrivateOrdersCancelOrders(c *gin.Context)
	// Process published cart positions
	// (POST /api/private/v1/order:process-published-cart-positions)
	PrivateOrdersPublishedCartPositions(c *gin.Context)
	// Process reserved products
	// (POST /api/private/v1/order:process-reserved-products)
	PrivateOrdersProcessReservedProducts(c *gin.Context)
}

// ServerInterfaceWrapper converts contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler            ServerInterface
	HandlerMiddlewares []MiddlewareFunc
	ErrorHandler       func(*gin.Context, error, int)
}

type MiddlewareFunc func(c *gin.Context)

// PrivateOrdersBatchCancelUnpaidOrders operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersBatchCancelUnpaidOrders(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersBatchCancelUnpaidOrders(c)
}

// PrivateOrdersCancelOrders operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersCancelOrders(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersCancelOrders(c)
}

// PrivateOrdersPublishedCartPositions operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersPublishedCartPositions(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersPublishedCartPositions(c)
}

// PrivateOrdersProcessReservedProducts operation middleware
func (siw *ServerInterfaceWrapper) PrivateOrdersProcessReservedProducts(c *gin.Context) {

	for _, middleware := range siw.HandlerMiddlewares {
		middleware(c)
		if c.IsAborted() {
			return
		}
	}

	siw.Handler.PrivateOrdersProcessReservedProducts(c)
}

// GinServerOptions provides options for the Gin server.
type GinServerOptions struct {
	BaseURL      string
	Middlewares  []MiddlewareFunc
	ErrorHandler func(*gin.Context, error, int)
}

// RegisterHandlers creates http.Handler with routing matching OpenAPI spec.
func RegisterHandlers(router gin.IRouter, si ServerInterface) {
	RegisterHandlersWithOptions(router, si, GinServerOptions{})
}

// RegisterHandlersWithOptions creates http.Handler with additional options
func RegisterHandlersWithOptions(router gin.IRouter, si ServerInterface, options GinServerOptions) {
	errorHandler := options.ErrorHandler
	if errorHandler == nil {
		errorHandler = func(c *gin.Context, err error, statusCode int) {
			c.JSON(statusCode, gin.H{"msg": err.Error()})
		}
	}

	wrapper := ServerInterfaceWrapper{
		Handler:            si,
		HandlerMiddlewares: options.Middlewares,
		ErrorHandler:       errorHandler,
	}

	router.POST(options.BaseURL+"/api/private/v1/order:batch-cancel-unpaid-orders", wrapper.PrivateOrdersBatchCancelUnpaidOrders)
	router.POST(options.BaseURL+"/api/private/v1/order:cancel-orders", wrapper.PrivateOrdersCancelOrders)
	router.POST(options.BaseURL+"/api/private/v1/order:process-published-cart-positions", wrapper.PrivateOrdersPublishedCartPositions)
	router.POST(options.BaseURL+"/api/private/v1/order:process-reserved-products", wrapper.PrivateOrdersProcessReservedProducts)
}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
